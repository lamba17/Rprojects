---
title: "Bike Share Demand Challenge"
author: "Akash"
output: github_document
---
###IMPORT DATA
```{r}
bike <- read.csv("bikeshare.csv")
print(head(bike))
```
###EXPLORATORY DATA ANALYSIS
```{r,warning=FALSE,include=FALSE}
library(ggplot2)
library(dplyr)
```
####1.Count vs temp - Scatterplot
```{r}
ggplot(bike,aes(temp,count))+ geom_point(alpha=0.3,aes(color=temp))+theme_bw()
```

####2.Count vs Datetime - Scatterplot
```{r}
bike$datetime <- as.POSIXct(bike$datetime)
pl <- ggplot(bike,aes(datetime,count))+geom_point(aes(color=temp),alpha=0.5)
```

####3.Customize the color using scale_color_continous
```{r}
pl + scale_color_continuous(low='#55D8CE',high='#FF6E2E')+theme_bw()
```

>2011 we have less bike rentals and 2012 we have more bike rental trends.
>Winter bike rental is less and summer bike rentals are more.

###CORRELATIONS
####Correlation between temp and count
```{r}
cor(bike$temp,bike$count)
```

###BOXPLOT
####Count vs Season is a factor data
```{r}
ggplot(bike,aes(factor(season),count))+geom_boxplot(aes(color=factor(season)))+theme_bw()
```

>More rentals in winter than spring.
>Highest rentals in summer and fall.

###FEATURE ENGINEERING
####An "hour" column that takes the hour from the datetime column. 
```{r}
bike$hour <- sapply(bike$datetime,function(x){format(x,"%H")})
head(bike)
```

####sapply() and as.numeric to change the hour column to a column of numeric values.
```{r}
bike$hour <- sapply(bike$hour,as.numeric)
```

###VISUALIZATIONS
#####1.Scatterplot - Count vs hour and color scale as temperature
```{r}
pl <- ggplot(filter(bike,workingday==0),aes(hour,count))
```

>lowest at in 3 at morning,major bike rental at 6 oclock

####2.color scale as temp and jitter with the width at x-axis and we don't add jitter to height
```{r}
pl <- pl + geom_point(position=position_jitter(w=1, h=0),aes(color=temp),alpha=0.5)
pl
```

####extra colorgradients
```{r}
pl <- pl + scale_color_gradientn(colours = c('dark blue','blue','light blue','light green','yellow','orange','red'))
pl
pl+theme_bw()
```

###MODEL BUILDING
####1.Building Model with Single Feature
```{r}
temp.model <- lm(count~temp,bike)
```

####summary
```{r}
summary(temp.model)
```

>bike rentals if the temperature was 25 degrees Celsius
```{r}
temp.test <- data.frame(temp=c(25))
temp.test
```

#####predict
```{r}
predict(temp.model,temp.test)
```

####2.Model with all the features
```{r}
model <- lm(count~.-casual-registered-datetime-atemp,bike)
```

#####summary
```{r}
summary(model)
```






